{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dataset_blob",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dataset_blob",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "dataset_blob",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "split1"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Ano_venda as short,",
				"          valor_venda_ano as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     wildcardPaths:['exemplo_union.csv']) ~> source1",
				"source1 split(Ano_venda==2014,",
				"     Ano_venda==2015,",
				"     disjoint: false) ~> split1@(regra2014, regra2015)",
				"split1@regra2014 filter(valor_venda_ano<265345) ~> filter1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          idcliente as string,",
				"          nomecliente as string",
				"     ),",
				"     partitionFileNames:['vendas2014.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"split1@regra2015 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          idcliente as string,",
				"          nomecliente as string",
				"     ),",
				"     partitionFileNames:['vendas2015.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}