{
	"name": "dataflow_blob_to_sql",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "arquivo_vendas",
						"type": "DatasetReference"
					},
					"name": "arquivoVendas"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dataset_blob",
						"type": "DatasetReference"
					},
					"name": "salvaTabelaCliente"
				}
			],
			"transformations": [
				{
					"name": "selectCliente"
				},
				{
					"name": "cast1"
				},
				{
					"name": "selectCidade"
				},
				{
					"name": "cast2"
				},
				{
					"name": "select1"
				},
				{
					"name": "agregacaoValoresDistintos"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id_venda as string,",
				"          cod_cliente as string,",
				"          nom_cliente as string,",
				"          cod_vendedor as string,",
				"          nom_vendedor as string,",
				"          cod_cidade as string,",
				"          nom_cidade as string,",
				"          cod_produto as string,",
				"          Nom_produto as string,",
				"          cod_marca as string,",
				"          Nom_marca as string,",
				"          cod_departamento as string,",
				"          nom_departamento as string,",
				"          cod_gerencia as string,",
				"          nom_gerencia as string,",
				"          Ano_venda as string,",
				"          Mes_venda as string,",
				"          Dia_venda as string,",
				"          dtc_venda as string,",
				"          qtd_venda as string,",
				"          val_venda as string,",
				"          num_nota as string,",
				"          Latitude as string,",
				"          Longitude as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> arquivoVendas",
				"arquivoVendas select(mapColumn(",
				"          idcliente = cod_cliente,",
				"          nomecliente = nom_cliente",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCliente",
				"selectCliente cast(output(",
				"          idcliente as integer",
				"     ),",
				"     errors: true) ~> cast1",
				"arquivoVendas select(mapColumn(",
				"          idcidade = cod_cidade,",
				"          nomecidade = nom_cidade",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCidade",
				"selectCidade cast(output(",
				"          idcidade as integer",
				"     ),",
				"     errors: true) ~> cast2",
				"arquivoVendas select(mapColumn(",
				"          id_venda,",
				"          cod_cliente,",
				"          nom_cliente,",
				"          cod_vendedor,",
				"          nom_vendedor,",
				"          cod_cidade,",
				"          nom_cidade,",
				"          cod_produto,",
				"          Nom_produto,",
				"          cod_marca,",
				"          Nom_marca,",
				"          cod_departamento,",
				"          nom_departamento,",
				"          cod_gerencia,",
				"          nom_gerencia,",
				"          Ano_venda,",
				"          Mes_venda,",
				"          Dia_venda,",
				"          dtc_venda,",
				"          qtd_venda,",
				"          val_venda,",
				"          num_nota,",
				"          Latitude,",
				"          Longitude",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"cast1 aggregate(groupBy(idcliente,",
				"          nomecliente),",
				"     idclienteagg = first(idcliente)) ~> agregacaoValoresDistintos",
				"agregacaoValoresDistintos sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          idcliente as string,",
				"          nomecliente as string",
				"     ),",
				"     partitionFileNames:['testeinsercaoclient.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          idcliente,",
				"          nomecliente",
				"     ),",
				"     partitionBy('hash', 1)) ~> salvaTabelaCliente"
			]
		}
	}
}